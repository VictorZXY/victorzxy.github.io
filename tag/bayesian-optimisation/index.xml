<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bayesian Optimisation | Xiangyu Zhao</title>
    <link>https://victorzxy.github.io/tag/bayesian-optimisation/</link>
      <atom:link href="https://victorzxy.github.io/tag/bayesian-optimisation/index.xml" rel="self" type="application/rss+xml" />
    <description>Bayesian Optimisation</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2022 Xiangyu Zhao</copyright><lastBuildDate>Mon, 07 Feb 2022 14:30:00 +0000</lastBuildDate>
    <image>
      <url>https://victorzxy.github.io/media/icon_hu445124fc86f9a5e0ef5204885c05fa2c_2309_512x512_fill_lanczos_center_3.png</url>
      <title>Bayesian Optimisation</title>
      <link>https://victorzxy.github.io/tag/bayesian-optimisation/</link>
    </image>
    
    <item>
      <title>Building a Simulator and Emulator for Traffic Signalling</title>
      <link>https://victorzxy.github.io/talk/building-a-simulator-and-emulator-for-traffic-signalling/</link>
      <pubDate>Mon, 07 Feb 2022 14:30:00 +0000</pubDate>
      <guid>https://victorzxy.github.io/talk/building-a-simulator-and-emulator-for-traffic-signalling/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Building a Simulator and Emulator for Traffic Signalling</title>
      <link>https://victorzxy.github.io/post/traffic-sim/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://victorzxy.github.io/post/traffic-sim/</guid>
      <description>&lt;p&gt;In this project, we carried out simulation and emulation of an urban traffic signalling system. We first built a simulator that can randomly generate networks and car routes to test how different signal scheduling choices affect the total distance travelled by cars in a given period. Based on this, we built an emulator to search for optimal scheduling using Bayesian optimisation. To overcome the problem of exploding search space without sacrificing flexibility or descriptiveness, we introduced four different scheduling schemes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distinct scheduling&lt;/li&gt;
&lt;li&gt;Uniform scheduling&lt;/li&gt;
&lt;li&gt;Preset scheduling&lt;/li&gt;
&lt;li&gt;Forced-preset scheduling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We then conducted experiments on very small networks (5 junctions), small networks (40 junctions) and medium networks (200 junctions) to compare their performances. Results show that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preset scheduling gives the best convergence limit under reasonable number of iterations in most cases;&lt;/li&gt;
&lt;li&gt;Uniform and distinct scheduling give much poorer performance due to their own limitations;&lt;/li&gt;
&lt;li&gt;Forced-preset scheduling does show certain potential in some cases, but is rather unstable compared to preset scheduling.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We believe that the combination of Bayesian optimisation with traffic planning offers some novel insights and has much more potential to be discovered. With sufficient research effort, this area would bring great benefit to city planners and the general public, with potential applications in other areas that involves network traffic controls.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building a Simulator and Emulator for Traffic Signalling</title>
      <link>https://victorzxy.github.io/project/traffic-sim/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://victorzxy.github.io/project/traffic-sim/</guid>
      <description>&lt;p&gt;In this project, we carried out simulation and emulation of an urban traffic signalling system. We first built a simulator that can randomly generate networks and car routes to test how different signal scheduling choices affect the total distance travelled by cars in a given period. Based on this, we built an emulator to search for optimal scheduling using Bayesian optimisation. To overcome the problem of exploding search space without sacrificing flexibility or descriptiveness, we introduced four different scheduling schemes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distinct scheduling&lt;/li&gt;
&lt;li&gt;Uniform scheduling&lt;/li&gt;
&lt;li&gt;Preset scheduling&lt;/li&gt;
&lt;li&gt;Forced-preset scheduling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We then conducted experiments on very small networks (5 junctions), small networks (40 junctions) and medium networks (200 junctions) to compare their performances. Results show that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preset scheduling gives the best convergence limit under reasonable number of iterations in most cases;&lt;/li&gt;
&lt;li&gt;Uniform and distinct scheduling give much poorer performance due to their own limitations;&lt;/li&gt;
&lt;li&gt;Forced-preset scheduling does show certain potential in some cases, but is rather unstable compared to preset scheduling.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We believe that the combination of Bayesian optimisation with traffic planning offers some novel insights and has much more potential to be discovered. With sufficient research effort, this area would bring great benefit to city planners and the general public, with potential applications in other areas that involves network traffic controls.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
