<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graph Neural Networks | Xiangyu Zhao</title>
    <link>https://victorzxy.github.io/tag/graph-neural-networks/</link>
      <atom:link href="https://victorzxy.github.io/tag/graph-neural-networks/index.xml" rel="self" type="application/rss+xml" />
    <description>Graph Neural Networks</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2022 Xiangyu Zhao</copyright><lastBuildDate>Tue, 26 Apr 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://victorzxy.github.io/media/icon_hu51ffffd5f6381cda320d0c97647d90a4_34098_512x512_fill_lanczos_center_3.png</url>
      <title>Graph Neural Networks</title>
      <link>https://victorzxy.github.io/tag/graph-neural-networks/</link>
    </image>
    
    <item>
      <title>Improving Graph Generative Models via Expressive Graph Neural Networks</title>
      <link>https://victorzxy.github.io/post/expressive-graph-gen/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://victorzxy.github.io/post/expressive-graph-gen/</guid>
      <description>&lt;p&gt;Graph generation is a very challenging problem that requires predicting an entire graph with multiple nodes and edges from a given label, and is fundamental for many real-world tasks, such as molecular graph generation for drug discovery. A lot of successful methods have been explored on graph generation, including Graph Convolutional Policy Network (GCPN) and GraphAF, but the underlying graph neural network (GNN) structure for graph representation within both works remains untouched, namely the Relational Graph Convolutional Network (R-GCN). In this project, we investigate the expressivity of GNNs under the context of the graph generation problem, by replacing R-GCN in GCPN with more expressive GNNs, including Graph Isomorphism Network (GIN), Principal Neighbourhood Aggregation (PNA) and Graph Substructure Network (GSN). Experimental results show that more expressive GNNs can indeed significantly improve GCPN&amp;rsquo;s performance on chemical property optimisation, with the only bottleneck coming from the sensitive nature of the graph generative method. In addition, since nearly all of the recent works on new GNN architectures are focused on pushing node/graph classification/regression benchmarks, which are comparatively simpler than graph generation modelling in terms of the combinatorial complexity, we also wish to challenge the graph representation learning community&amp;rsquo;s notion for benchmarking the expressivity of GNNs with this project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Improving Graph Generative Models via Expressive Graph Neural Networks</title>
      <link>https://victorzxy.github.io/project/expressive-graph-gen/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://victorzxy.github.io/project/expressive-graph-gen/</guid>
      <description>&lt;p&gt;Graph generation is a very challenging problem that requires predicting an entire graph with multiple nodes and edges from a given label, and is fundamental for many real-world tasks, such as molecular graph generation for drug discovery. A lot of successful methods have been explored on graph generation, including Graph Convolutional Policy Network (GCPN) and GraphAF, but the underlying graph neural network (GNN) structure for graph representation within both works remains untouched, namely the Relational Graph Convolutional Network (R-GCN). In this project, we investigate the expressivity of GNNs under the context of the graph generation problem, by replacing R-GCN in GCPN with more expressive GNNs, including Graph Isomorphism Network (GIN), Principal Neighbourhood Aggregation (PNA) and Graph Substructure Network (GSN). Experimental results show that more expressive GNNs can indeed significantly improve GCPN&amp;rsquo;s performance on chemical property optimisation, with the only bottleneck coming from the sensitive nature of the graph generative method. In addition, since nearly all of the recent works on new GNN architectures are focused on pushing node/graph classification/regression benchmarks, which are comparatively simpler than graph generation modelling in terms of the combinatorial complexity, we also wish to challenge the graph representation learning community&amp;rsquo;s notion for benchmarking the expressivity of GNNs with this project.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
